import { useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { useAuth } from '@/lib/apiComponent/hooks/useAuth';
import { SubscriptionPlan } from '@/types/subscription';

const RegistrationDebug = () => {
  const { registerWithPlan } = useAuth();
  const [isLoading, setIsLoading] = useState(false);
  const [lastResponse, setLastResponse] = useState<any>(null);

  const testData = {
    // Informations personnelles
    email: "test@example.com",
    firstName: "John",
    lastName: "Doe",
    gender: "masculin" as const,
    ageRange: "25-34",
    
    // Contact et localisation
    phone: "+33123456789",
    country: "France",
    city: "Paris",
    
    // Situation professionnelle
    professionalStatus: "Salari√©",
    
    // Culture d'√©pargne actuelle
    maxSavingsAmount: "50000",
    savingsHabit: "Mensuel",
    currentSavingsLevel: "Interm√©diaire",
    savingsUsage: "Projets personnels",
    savingsChallenge: "√âconomiser pour un voyage",
    
    // Sur le challenge √©pargne
    previousChallengeExperience: "Non",
    motivation: "Am√©liorer mes finances",
    challengeMode: SubscriptionPlan.PREMIUM,
    challengeFormula: "√âpargne libre",
    partnerAccounts: "Orange Money, MTN Money",
    expenseTracking: "Application mobile",
    futureInterest: "Investissement",
    concerns: "Discipline personnelle",
    
    // Configuration du compte
    challengeStartMonth: "2025-01",
  };

  const handleTestRegistration = async () => {
    try {
      setIsLoading(true);
      console.log('üì§ Envoi des donn√©es de test:', testData);
      
      const response = await registerWithPlan(testData);
      
      console.log('üì• R√©ponse re√ßue:', response);
      setLastResponse(response);
      
    } catch (error) {
      console.error('‚ùå Erreur lors du test:', error);
      setLastResponse({ error: error.message });
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="space-y-6">
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center space-x-2">
            <span>Test d'Inscription - Debug</span>
            <Badge variant="outline">D√©veloppement</Badge>
          </CardTitle>
          <CardDescription>
            Testez l'envoi de tous les champs du formulaire d'inscription
          </CardDescription>
        </CardHeader>
        <CardContent className="space-y-4">
          <Button 
            onClick={handleTestRegistration}
            disabled={isLoading}
            className="w-full"
          >
            {isLoading ? "Test en cours..." : "Tester l'inscription compl√®te"}
          </Button>
          
          {lastResponse && (
            <div className="mt-4">
              <h3 className="font-semibold mb-2">Derni√®re r√©ponse :</h3>
              <pre className="bg-gray-100 p-4 rounded-lg text-xs overflow-auto max-h-96">
                {JSON.stringify(lastResponse, null, 2)}
              </pre>
            </div>
          )}
        </CardContent>
      </Card>

      <Card>
        <CardHeader>
          <CardTitle>Champs du Formulaire</CardTitle>
          <CardDescription>
            Liste de tous les champs qui seront envoy√©s √† l'API
          </CardDescription>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <h4 className="font-semibold mb-2">Informations personnelles</h4>
              <ul className="text-sm space-y-1">
                <li>‚Ä¢ email: {testData.email}</li>
                <li>‚Ä¢ firstName: {testData.firstName}</li>
                <li>‚Ä¢ lastName: {testData.lastName}</li>
                <li>‚Ä¢ gender: {testData.gender}</li>
                <li>‚Ä¢ ageRange: {testData.ageRange}</li>
              </ul>
            </div>
            
            <div>
              <h4 className="font-semibold mb-2">Contact et localisation</h4>
              <ul className="text-sm space-y-1">
                <li>‚Ä¢ phone: {testData.phone}</li>
                <li>‚Ä¢ country: {testData.country}</li>
                <li>‚Ä¢ city: {testData.city}</li>
              </ul>
            </div>
            
            <div>
              <h4 className="font-semibold mb-2">Situation professionnelle</h4>
              <ul className="text-sm space-y-1">
                <li>‚Ä¢ professionalStatus: {testData.professionalStatus}</li>
              </ul>
            </div>
            
            <div>
              <h4 className="font-semibold mb-2">Culture d'√©pargne</h4>
              <ul className="text-sm space-y-1">
                <li>‚Ä¢ maxSavingsAmount: {testData.maxSavingsAmount}</li>
                <li>‚Ä¢ savingsHabit: {testData.savingsHabit}</li>
                <li>‚Ä¢ currentSavingsLevel: {testData.currentSavingsLevel}</li>
                <li>‚Ä¢ savingsUsage: {testData.savingsUsage}</li>
                <li>‚Ä¢ savingsChallenge: {testData.savingsChallenge}</li>
              </ul>
            </div>
            
            <div>
              <h4 className="font-semibold mb-2">Challenge √©pargne</h4>
              <ul className="text-sm space-y-1">
                <li>‚Ä¢ previousChallengeExperience: {testData.previousChallengeExperience}</li>
                <li>‚Ä¢ motivation: {testData.motivation}</li>
                <li>‚Ä¢ challengeMode: {testData.challengeMode}</li>
                <li>‚Ä¢ challengeFormula: {testData.challengeFormula}</li>
                <li>‚Ä¢ partnerAccounts: {testData.partnerAccounts}</li>
                <li>‚Ä¢ expenseTracking: {testData.expenseTracking}</li>
                <li>‚Ä¢ futureInterest: {testData.futureInterest}</li>
                <li>‚Ä¢ concerns: {testData.concerns}</li>
              </ul>
            </div>
            
            <div>
              <h4 className="font-semibold mb-2">Configuration</h4>
              <ul className="text-sm space-y-1">
                <li>‚Ä¢ challengeStartMonth: {testData.challengeStartMonth}</li>
              </ul>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default RegistrationDebug;
